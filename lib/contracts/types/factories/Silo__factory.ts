/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Silo, SiloInterface } from "../Silo";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "underlying",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "_wrappedNativeToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "depositEth",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "wrappedNativeToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IWETH9",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export class Silo__factory {
  static readonly abi = _abi;
  static createInterface(): SiloInterface {
    return new utils.Interface(_abi) as SiloInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Silo {
    return new Contract(address, _abi, signerOrProvider) as Silo;
  }
}
