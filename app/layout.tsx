import ContextProvider from "@/context";
import { getEnvVars } from "@/lib/utils/env";
import { MiniKitProvider } from "@worldcoin/minikit-js/minikit-provider";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { headers } from "next/headers";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: "/Damm_Capital_Isotipo_Fondo Oscuro.png",
  },
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = await headers();
  const cookies = headersList.get("cookie");

  return (
    <html lang="en" className="dark">
      {getEnvVars().ACTIVE_MINIAPP ? (
        <MiniKitProvider>
          <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
          >
            <ContextProvider cookies={cookies}>{children}</ContextProvider>
          </body>
        </MiniKitProvider>
      ) : (
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <ContextProvider cookies={cookies}>{children}</ContextProvider>
        </body>
      )}
    </html>
  );
}
